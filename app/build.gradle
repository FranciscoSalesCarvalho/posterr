plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

apply from: "../dependencies.gradle"

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.francisco.strider"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"${baseUrl}\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField("String", "BASE_URL", "\"${baseUrl}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        generateStubs = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Versions.compose
        kotlinCompilerVersion Versions.kotlinStdLib
    }
}

dependencies {

    implementation project(Modules.commons)
    implementation project(Modules.dsc)

    // Dagger2
    api AndroidLibs.dagger
    api AndroidLibs.daggerAndroid
    api AndroidLibs.daggerSupport
    kapt AndroidLibs.daggerCompiler
    kapt AndroidLibs.daggerProcessor

    implementation "androidx.room:room-runtime:${Versions.room}"
    kapt "androidx.room:room-compiler:${Versions.room}"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$Versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$Versions.retrofit"
    implementation "com.squareup.moshi:moshi:$Versions.mosh"
    implementation "com.squareup.moshi:moshi-kotlin:$Versions.mosh"
    implementation "com.squareup.okhttp3:logging-interceptor:${Versions.loggingInterceptor}"
    implementation "com.squareup.okhttp3:okhttp:$Versions.okHttp"

    testImplementation "junit:junit:${Versions.junit}"
    testImplementation "io.mockk:mockk:${Versions.mockk}"
    testImplementation "androidx.arch.core:core-testing:${Versions.archCoreTesting}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.kotlinxCoroutinesTest}"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{
    kotlinOptions{
        freeCompilerArgs +=["-Xjvm-default=all",]
    }
}